- hosts: all
  gather_facts: no
  tasks: 

  - name: Verify/Wait for VMs to be provisioned
    wait_for_connection:

  - name: Gathering facts
    setup:

  - name: Add the Google APT signing key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes repository to system
    apt_repository: 
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present

  - name: "Update APT and install docker and k8s tools"
    apt:
      update_cache: yes
      pkg:
        - docker.io
        - apt-transport-https
        - kubelet
        - kubeadm
        - kubernetes-cni

  - name: Update docker to use systemd cgroups
    copy: 
      dest: /etc/docker/daemon.json
      content: | 
        {    
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }

  - name: Create /etc/systemd/system/docker.service.d
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory
      mode: '0755'

  - name: restart systemd and enable docker
    systemd:
      daemon_reload: yes
      name: docker
      enabled: yes
      state: started

- hosts: k8smaster

  tasks:
  - name: Initialize k8s (kubeadm init)
    command: 
      cmd: kubeadm init --ignore-preflight-errors=NumCPU
      creates: /etc/kubernetes/admin.conf

  - name: Generate join command
    shell: kubeadm token create --print-join-command > /tmp/join_command
    args:
      creates: /tmp/join_command

  - name: Pull join command local
    fetch:
      src: /tmp/join_command
      dest: /tmp/join_command
      flat: yes

  - name: Copy kubeconfig local
    fetch:
      src: /etc/kubernetes/admin.conf
      dest: ~/.kube/config
      flat: yes

- hosts: localhost
  tasks:
    - name: Create Weave.net password
      shell: head -c 16 /dev/urandom | shasum -a 256 | cut -b1-50 | sudo tee /tmp/weave-passwd && 
      args:
        creates: /tmp/weave-passwd

    - name: Determine if weave-passwd secret has been created in cluster
      shell: kubectl get secret -n kube-system weave-passwd
      register: weavepass
      failed_when: false
      changed_when: false

    - name: Create weave-passwd secret
      shell: kubectl create secret -n kube-system generic weave-passwd --from-file=/tmp/weave-passwd
      when: "'not found' in weavepass.stderr"

    - name: Determine if Weave.net is installed in cluster
      shell: kubectl get pods -A | grep weave-net
      register: weavenet
      changed_when: false
      failed_when: false

    - name: Install Weave.net
      shell: |
        kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&password-secret=weave-passwd"
      when: weavenet.rc != 0
      
- hosts: k8sworker

  tasks:
    - name: Copy join command to host
      copy:
        src: /tmp/join_command
        dest: /tmp/join_command

    - name: Join worker to cluster
      shell: sh /tmp/join_command && rm /tmp/join_command
      args:
        creates: /etc/kubernetes/kubelet.conf

